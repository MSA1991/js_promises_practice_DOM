{"version":3,"sources":["scripts/main.js"],"names":["root","document","querySelector","onSuccess","resolve","insertAdjacentHTML","onError","reject","firstPromise","Promise","addEventListener","setTimeout","Error","then","result","catch","error","secondPromise","thirdPromise"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAUC,GACjBJ,EAAKK,mBAAmB,YAElBD,6DAAAA,OAAAA,EAFN,qBAOF,SAASE,EAAQC,GACfP,EAAKK,mBAAmB,YAElBE,6DAAAA,OAAAA,EAFN,qBAOF,IAAMC,EAAe,IAAIC,QAAQ,SAACL,EAASG,GACzCP,EAAKU,iBAAiB,YAAa,WACjCN,EAAQ,gCAGVO,WAAW,WACTJ,EAAOK,MAAM,gCACZ,OAGLJ,EACGK,KAAK,SAAAC,GAAUX,OAAAA,EAAUW,KACzBC,MAAM,SAAAC,GAASV,OAAAA,EAAQU,KAE1B,IAAMC,EAAgB,IAAIR,QAAQ,SAAAL,GAChCJ,EAAKU,iBAAiB,YAAa,WACjCN,EAAQ,iCAGVJ,EAAKU,iBAAiB,cAAe,WACnCN,EAAQ,mCAIZa,EAAcJ,KAAK,SAAAC,GAAUX,OAAAA,EAAUW,KAEvC,IAAMI,EAAe,IAAIT,QAAQ,SAAAL,GAC/BJ,EAAKU,iBAAiB,YAAa,WACjCV,EAAKU,iBAAiB,cAAe,WACnCN,EAAQ,oCAKdc,EAAaL,KAAK,SAAAC,GAAUX,OAAAA,EAAUW","file":"main.da1d0fe3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst root = document.querySelector('body');\n\nfunction onSuccess(resolve) {\n  root.insertAdjacentHTML('beforeend', `\n    <div data-qa=\"notification\" class=\"success\">\n      ${resolve}\n    </div>\n  `);\n}\n\nfunction onError(reject) {\n  root.insertAdjacentHTML('beforeend', `\n    <div data-qa=\"notification\" class=\"warning\">\n      ${reject}\n    </div>\n  `);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  root.addEventListener('mousedown', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise\n  .then(result => onSuccess(result))\n  .catch(error => onError(error));\n\nconst secondPromise = new Promise(resolve => {\n  root.addEventListener('mousedown', () => {\n    resolve('Second promise was resolved');\n  });\n\n  root.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise.then(result => onSuccess(result));\n\nconst thirdPromise = new Promise(resolve => {\n  root.addEventListener('mousedown', () => {\n    root.addEventListener('contextmenu', () => {\n      resolve('Third promise was resolved');\n    });\n  });\n});\n\nthirdPromise.then(result => onSuccess(result));\n"]}